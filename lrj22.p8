pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
--lowrezjam 2022

function _init()
	--mode 3 for 64x64 res
	poke(0x5f2c,3)
	
	init_player()
	init_map()
	init_farm()
	init_ui()
end

function _update()
	if not ui_active then
		update_player()
	end
	update_ui()
end

function _draw()
	cls()
	draw_map()
	draw_player()
	draw_crops()
	draw_ui()
end

-->8
--player

function init_player()
	p={}
	p.x=11 --position
	p.y=2
	p.sprr=10 --facing right
	p.sprl=11 --facing left
	p.spr=p.sprr --current sprite
	p.gold=0 --money
	p.seeds={0,0,0,0} --seed inv
	p.crops={0,0,0,0} --crop inv
	p.axeseed=false
	p.axe=false
end

function update_player()
	local dx=p.x
	local dy=p.y
	
	if (btnp(‚¨ÖÔ∏è)) then
		dx-=1
		p.spr=p.sprl
	end
	if (btnp(‚û°Ô∏è)) then
		dx+=1
		p.spr=p.sprr
	end
	if (btnp(‚¨ÜÔ∏è)) dy-=1
	if (btnp(‚¨áÔ∏è)) dy+=1
	
	if can_move(dx,dy) then
		p.x=mid(0,dx,127)
		p.y=mid(0,dy,63)
	end
	
	interact(dx,dy)
end

function draw_player()
	spr(p.spr,p.x*8,p.y*8)
end

function interact(x,y)
	dia(get_text(x,y))
	run_func(x,y)
	
	if is_tile(plot,x,y) then
		farm(x,y)
	elseif is_tile(tree,x,y) then
		chop(x,y)
	end
end

-->8
--map

function init_map()
	--tile flags
	wall=0
	plot=1
	tree=2
	--map data
	funcs={}
	add_func(11,1,sleep)
	add_func(14,5,horse)
	--other
	day=1
	sleep=false
	--progression
	givencarrotseed=false
	gavehorsecarrot=false
end

function add_func(x,y,func)
	funcs[x+y*128]=func
end

function has_func(x,y)
	return funcs[x+y*128]~=nil
end

function run_func(x,y)
	if (has_func(x,y)) funcs[x+y*128]()
end

function update_map()
end

function draw_map()
	mx=flr(p.x/8)*8
	my=flr(p.y/8)*8
	camera(mx*8,my*8)
	
	map(0,0,0,0,128,64)
end

function is_tile(flag,x,y)
	return fget(mget(x,y),flag)
end

function is_blocked(x,y)
	return fget(mget(x,y),0)
end

function can_move(x,y)
	return not is_blocked(x,y)
end

function chop(x,y)
	local tile=mget(x,y)
	if p.axe then
		mset(x,y,1)
		dia("you chopped\nthe tree!")
	else
		dia("a tree blocks\nyour path")
	end
end

function sleep()
	dia("you sleep for\nthe night")
	sleep=true
	grow_plots()
	day+=1
end

function horse()
	if not givencarrotseed then
		dia("neigh! bring\nme a carrot")
		dia("and i will\nhelp you")
		dia("proceed! take\nthese seeds")
		dia("and plant\nthem!")
		dia("[carrot seed\nget!]")
		givencarrotseed=true
		p.seeds[1]+=1
	elseif not gavehorsecarrot then
		if p.crops[1]<1 then
			dia("try planting\nthe carrot")
			dia("seeds in that\npatch of")
			dia("dirt over\nthere! then")
			dia("you should\nsleep for")
			dia("the night!\nneigh!")
		else
			dia("yummy! thank\nyou! here,")
			dia("take these\nodd seeds!")
			dia("[axe seed\nget!]")
			gavehorsecarrot=true
			p.crops[1]-=1
			p.axeseed=true
		end
	else
		dia("neigh!")
	end
end

-->8
--farm

function init_farm()
	crops={}
	crops[1]={name="carrot",spr1=36,spr2=37}
	crops[2]={name="radish",spr1=52,spr2=53}
	crops[3]={name="tomato",spr1=38,spr2=39}
	crops[4]={name="corn",spr1=54,spr2=55}
	crops[5]={name="axe",spr1=34,spr2=35}
	plots={}
	planting=false
end

function get_plot(x,y)
	for p in all(plots) do
		if p.x==x and p.y==y then
			return p
		end
	end
end

function plant(x,y,crop)
	add(plots,{
		x=x,
		y=y,
		crop=crop,
		stage=1
	})
end

function grow_plots()
	for plot in all(plots) do
		if (plot.stage==1) plot.stage+=1
	end
end

function harvest(x,y)
	local plot=get_plot(x,y)
	local name=crops[plot.crop].name
	dia(name.."\nget!")
	if plot.crop==5 then
		p.axe=true
	else
		p.crops[plot.crop]+=1
	end
	del(plots,plot)
end

function farm(x,y)
	local plot=get_plot(x,y)
	
	if plot==nil then
		--no crop here, plant one
		if p.axeseed then
			plant(x,y,5)
			p.axeseed=false
			dia("axe seed\nplanted!")
		else
			pick_seed(x,y)
		end
	elseif plot.stage==1 then
		--still growing
		local name=crops[plot.crop].name
		dia(name.." seed")
	elseif plot.stage==2 then
		--harvest grown crop
		harvest(x,y)
	end
end

function draw_crops()
	for p in all(plots) do
		local c=crops[p.crop]
		if p.stage==1 then
			spr(c.spr1,p.x*8,p.y*8)
		elseif p.stage==2 then
			spr(c.spr2,p.x*8,p.y*8)
		end
	end
end

-->8
--ui

function init_ui()
	ui_active=false
	show_inv=false
	texts={}
	add_text(5,2,"moo!")
	add_text(4,6,"moo!")
	add_text(3,1,"* chicken\nnoise *")
	add_text(6,5,"* chicken\nnoise *")
	add_text(14,2,"talk to the\nhorse!")
	add_text(17,2,"‚òÖ farm ‚òÖ\n(yours)")
	add_text(21,1,"that's it\nso far...")
	dias={}
	init_plant()
end

function update_ui()
	ui_active=(active_text or planting or show_inv)
	
	show_inv=(btn(‚ùé) and btn(üÖæÔ∏è))
	
	if (planting) update_plant()
end

function draw_ui()
	draw_text()
	draw_inv()
	draw_plant()
end

function add_text(x,y,txt)
	texts[x+y*128]=txt
end

function get_text(x,y)
	if has_text(x,y) then
		return texts[x+y*128]
	else
		return nil
	end
end

function has_text(x,y)
	return texts[x+y*128]~=nil
end

function dia(txt)
	add(dias,txt)
end

function draw_text()
	local x=mx*8
	local y=my*8
	
	if (sleep) rectfill(x,y,x+64,y+64,0)
	
	if #dias>0 then
		active_text=dias[1]
	end
	
	if (active_text) then
		local tx=x+4
		local ty=y+48
		
		rectfill(tx,ty,tx+55,ty+14,7)
		print(active_text,tx+2,ty+2,1)
		print("üÖæÔ∏è",tx+48,ty+9,6)
	end
	
	if (btnp(üÖæÔ∏è)) then
		active_text=nil
		sleep=false
		if (#dias>0) del(dias,dias[1])
	end
end

function draw_inv()
	if (not show_inv) return
	
	local ix=mx*8+4
	local iy=my*8+4
	
	rectfill(ix,iy,ix+55,iy+55,0)
	
	spr(64,ix,iy)
	print(p.gold,ix+8,iy+1,7)
	print("day "..day,ix+28,iy+1,7)
	
	for i=1,4 do
		spr(crops[i].spr1,ix,iy+i*8)
		print(p.seeds[i],ix+8,iy+1+i*8,7)
		spr(crops[i].spr2,ix+28,iy+i*8)
		print(p.crops[i],ix+36,iy+1+i*8,7)
	end
	
	if p.axe then
		spr(35,ix,iy+48)
	elseif p.axeseed then
		spr(34,ix,iy+48)
	end
end

function init_plant()
	psel=1
	pcount=#p.seeds
end

function pick_seed(x,y)
	planting=true
	plantx=x
	planty=y
end

function update_plant()
 if btnp(‚ùé) then
 	planting=false
 	return
 end
 
 --todo: stop movement input
 --from changing selection
 if (btnp(‚¨ÖÔ∏è)) psel-=1
 if (btnp(‚û°Ô∏è)) psel+=1
 if psel<1 then
 	psel=pcount
 elseif psel>pcount then
 	psel=1
 end
 
 local sc=p.seeds[psel]
 
 if btnp(üÖæÔ∏è) and sc>=1 then
 	plant(plantx,planty,psel)
 	p.seeds[psel]-=1
 	planting=false
 end
end

function draw_plant()
	if (not planting) return
	
	local px=mx*8+4
	local py=my*8+20
	local cn=crops[psel].name
	local cs=crops[psel].spr2
	local sc=p.seeds[psel]
	
	rectfill(px,py,px+55,py+23,0)
	print("üÖæÔ∏èplant ‚ùénvm",px+2,py+17,7)
	print("‚¨ÖÔ∏è",px+15,py+9,7)
	print("‚û°Ô∏è",px+34,py+9,7)
	print(cn.." ("..sc..")",px+2,py+2,7)
	spr(cs,px+24,py+8)
end

__gfx__
0000000033333333333333333333333333333333333333330000000000000000000000000000000000aaaa0000aaaa0033333333ffffffffff4fffff33333333
00000000333333333b3b3333333663333333373333bbbb3300000000000000000000000000000000099999900999999034444443ff5454ffff4fffff44433443
007007003333333333b333333366663333337a733bbbbbb30000000000000000000000000000000000f1f100001f1f00341ff153f454545fff4fffff44444444
00077000333333333333333336666663333337333bbbbbb30000000000000000000000000000000000ffff0000ffff0034ff1f53445454544444444445444444
00077000333333333333333336666663337333333bbbbbb3000000000000000000000000000000000ee1e1e00e1e1ee034555553f454515fffff4fff44444454
00700700333333333333b3b33566666337a7333333bbbb33000000000000000000000000000000000fe1e1f00f1e1ef033345333f454515fffff4fff44444444
000000003333333333333b3333555553337333333334433300000000000000000000000000000000001111000011110033345333f454545fffff4fff44454444
00000000333333333333333333333333333333333333333300000000000000000000000000000000005005000050050033333333445454544444444444444444
33333333333333334343333333333434333333333333333300000000333333333333333333333333000000003333333333333333333333330000000044444444
33833333333338337741771111771477344444433355553300000000333553333335533333355333000000003344444444444444444444330000000045444444
39173333333371937177777117777717345444433544445300000000444544443335444444445333000000003444444444444444444444430000000044444454
33773333333377335771177117711775344445433544445300000000555545553335455555545333000000003444444445444444454444430000000044444444
33777773377777333311ee7777ee1133344444433544445300000000333543333335433333345333000000003444445444444454444444434000000044454444
33777763367777333317331771337133344544433544445300000000444544443335444444445333000000003444444444444444444444434778888444444444
33677633336776333377331771337733344444433355553300000000555545553335455555545333000000003445444444454444444544434444444434433444
333a3a3333a3a3333377337777337733333333333333333300000000333333333333433333343333000000003444444444444444444444434000000433333333
000000000000000000000000000d0000000000000000000000000000000b00003333433333343333000000000000000000000000000000003bb33bb333333333
000000000057750000000000000dd0000000000000b00000000000000b101000333553333335533300000000000000000000000000000000b1bbbb1b33555533
000000000577775000000700000df00000000900000b0b0000000800081b1000333543333334533300000000000000000000000000000000b1bbbb1b354b4453
00077000055775500070000000b0f0b000900000000bb0000080000000181b00333543333334533300000000000000000000000000000000bb8888bb3544b453
007777000555555000000000000bfb00000000000009900000000000001b1800333543333334533300000000000000000000000000000000bb8888bb35449453
0077770005555550000070000000000000009000000000000000800000000000333543333334533300000000000000000000000000000000bbbbbbbb35444453
00066000005555000000000000000000000000000000000000000000000000003335433333345333000000000000000000000000000000003bbbbbb333555533
0000000000000000000000000000000000000000000000000000000000000000333343333334333300000000000000000000000000000000bbb33bbb33333333
000000000000000034f33333000000000000000000000000000000000000b0a03333433333343333000000003444444444444444444444433bb33bb333333333
0000000000000000414f33330000000000000000000000b00000000000a0ba00333553333335533300000000344444444544444445444443b1bbbb1b33555533
0000000000000660444ff333000000000000020000b00b0000000a00000abb00333544444444533300000000344444544444445444444443b1bbbb1b35444b53
00000440000006603345554f0000000000200000000bb00000a00000000bb000333545555554533300000000344444444444444444444443bb8888bb3544b453
00044550066005503344554f000000000000000000022000000000000000b000333543333334533300000000344544444445444444454443bb8888bb35442453
04455000066000003344444f0000000000002000000000000000a00000000000333544444444533300000000344444444444444444444443bbbbbbbb35444453
0550000005500000334434430000000000000000000000000000000000000000333545555554533300000000334444444444444444444433344bb44333555533
00000000000000003355355300000000000000000000000000000000000000003333333333333333000000003333333333333333333333334443344433333333
00000000001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007aaa00010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07a44a90000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a4aaa90000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a4a4a90000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0aa44a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00999900000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000100050000000000000101010001010101000300010101000000000000000000000000000001010000000001000000010000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
181717171717171918170e0e0e17171928040101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
281501110101042928010e0d0e01022928010102012e01040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
28150101011201292802010104010c29280c0101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815011b1c1c1c1d051b1c1c1c1c1d051b1c1c1c1c1c1d010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815023b3c3c3c3d053b3c3c3c3c3d053b3c3c3c3c3c3d010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815010101011029280101020101322928010101010201010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815010413010129280401150101042928010201010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3817171717171739381717171717173928010101040101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
