pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
--lowrezjam 2022

function _init()
	--mode 3 for 64x64 res
	poke(0x5f2c,3)
	
	init_player()
	init_map()
	init_farm()
	init_ui()
end

function _update()
	if not ui_active then
		update_player()
	end
	update_ui()
end

function _draw()
	cls()
	draw_map()
	draw_player()
	draw_crops()
	draw_ui()
end

-->8
--player

function init_player()
	p={}
	p.x=11 --position
	p.y=2
	p.sprr=10 --facing right
	p.sprl=11 --facing left
	p.spr=p.sprr --current sprite
	p.gold=50 --money
	p.seeds={0,0,0,0} --seed inv
	p.crops={0,0,0,0} --crop inv
	p.axeseed=false
	p.axe=false
	p.pickseed=false
	p.pick=false
	p.rodseed=false
	p.rod=false
end

function update_player()
	local dx=p.x
	local dy=p.y
	
	if (btnp(‚¨ÖÔ∏è)) then
		dx-=1
		p.spr=p.sprl
	end
	if (btnp(‚û°Ô∏è)) then
		dx+=1
		p.spr=p.sprr
	end
	if (btnp(‚¨ÜÔ∏è)) dy-=1
	if (btnp(‚¨áÔ∏è)) dy+=1
	
	if can_move(dx,dy) then
		p.x=mid(0,dx,127)
		p.y=mid(0,dy,63)
	else
		sfx(0)
	end
	
	interact(dx,dy)
end

function draw_player()
	spr(p.spr,p.x*8,p.y*8)
end

function interact(x,y)
	dia(get_text(x,y))
	run_func(x,y)
	
	if is_tile(plot,x,y) then
		farm(x,y)
	elseif is_tile(tree,x,y) then
		chop(x,y)
	elseif is_tile(rock,x,y) then
		smash(x,y)
	elseif is_tile(water,x,y) then
		fish()
	end
end

-->8
--map

function init_map()
	--tile flags
	wall=0
	plot=1
	tree=2
	rock=3
	water=4
	--map data
	funcs={}
	add_func(11,1,sleep)
	add_func(14,5,horse)
	add_func(26,1,buyseeds)
	add_func(29,1,sellcrops)
	add_func(19,14,fisherman)
	--other
	day=1
	sleep=false
	--progression
	givencarrotseed=false
	gavehorsecarrot=false
end

function add_func(x,y,func)
	funcs[x+y*128]=func
end

function has_func(x,y)
	return funcs[x+y*128]~=nil
end

function run_func(x,y)
	if (has_func(x,y)) funcs[x+y*128]()
end

function update_map()
end

function draw_map()
	mx=flr(p.x/8)*8
	my=flr(p.y/8)*8
	camera(mx*8,my*8)
	
	map(0,0,0,0,128,64)
end

function is_tile(flag,x,y)
	return fget(mget(x,y),flag)
end

function is_blocked(x,y)
	return fget(mget(x,y),0)
end

function can_move(x,y)
	return not is_blocked(x,y)
end

function chop(x,y)
	local tile=mget(x,y)
	if p.axe then
		mset(x,y,1)
		dia("you chopped\nthe tree!")
		sfx(2)
	else
		dia("a tree blocks\nyour path")
	end
end

function smash(x,y)
	local tile=mget(x,y)
	if p.pick then
		mset(x,y,1)
		dia("you smashed\nthe rock!")
		sfx(3)
	else
		dia("a rock blocks\nyour path")
	end
end

function fish()
	if p.rod then
		dia("you cast your\nline out...")
	else
		dia("you could\nfish here")
	end
end

function sleep()
	dia("you sleep for\nthe night")
	sleep=true
	grow_plots()
	day+=1
end

function horse()
	if not givencarrotseed then
		dia("neigh! bring\nme a carrot")
		dia("and i will\nhelp you")
		dia("proceed! take\nthese seeds")
		dia("and plant\nthem!")
		dia("[carrot seed\nget!]")
		givencarrotseed=true
		p.seeds[1]+=1
	elseif not gavehorsecarrot then
		if p.crops[1]<1 then
			dia("try planting\nthe carrot")
			dia("seeds in that\npatch of")
			dia("dirt over\nthere! then")
			dia("you should\nsleep for")
			dia("the night!\nneigh!")
		else
			dia("yummy! thank\nyou! here,")
			dia("take these\nodd seeds!")
			dia("[axe seed\nget!]")
			gavehorsecarrot=true
			p.crops[1]-=1
			p.axeseed=true
		end
	else
		dia("neigh!")
	end
end

function buyseeds()
	buying=true
end

function sellcrops()
	selling=true
end

function fisherman()
end

-->8
--farm

function init_farm()
	crops={}
	crops[1]={name="carrot",spr1=36,spr2=37,prs=5,prc=10}
	crops[2]={name="radish",spr1=52,spr2=53,prs=7,prc=14}
	crops[3]={name="tomato",spr1=38,spr2=39,prs=10,prc=20}
	crops[4]={name="corn",spr1=54,spr2=55,prs=15,prc=30}
	crops[5]={name="axe",spr1=34,spr2=35}
	plots={}
end

function get_plot(x,y)
	for p in all(plots) do
		if p.x==x and p.y==y then
			return p
		end
	end
end

function plant(x,y,crop)
	add(plots,{
		x=x,
		y=y,
		crop=crop,
		stage=1
	})
	sfx(1)
end

function grow_plots()
	for plot in all(plots) do
		if (plot.stage==1) plot.stage+=1
	end
end

function harvest(x,y)
	local plot=get_plot(x,y)
	local name=crops[plot.crop].name
	dia(name.."\nget!")
	if plot.crop==5 then
		p.axe=true
	else
		p.crops[plot.crop]+=1
	end
	del(plots,plot)
	sfx(5)
end

function farm(x,y)
	local plot=get_plot(x,y)
	
	if plot==nil then
		--no crop here, plant one
		if p.axeseed then
			plant(x,y,5)
			p.axeseed=false
			dia("axe seed\nplanted!")
		else
			pick_seed(x,y)
		end
	elseif plot.stage==1 then
		--still growing
		local name=crops[plot.crop].name
		dia(name.." seed")
	elseif plot.stage==2 then
		--harvest grown crop
		harvest(x,y)
	end
end

function draw_crops()
	for p in all(plots) do
		local c=crops[p.crop]
		if p.stage==1 then
			spr(c.spr1,p.x*8,p.y*8)
		elseif p.stage==2 then
			spr(c.spr2,p.x*8,p.y*8)
		end
	end
end

-->8
--ui

function init_ui()
	ui_active=false
	show_inv=false
	planting=false
	buying=false
	selling=false
	texts={}
	add_text(5,2,"moo!")
	add_text(3,1,"* chicken\nnoise *")
	add_text(6,6,"* chicken\nnoise *")
	add_text(14,2,"talk to the\nhorse!")
	add_text(17,2,"‚òÖ farm ‚òÖ\n(yours)")
	add_text(21,1,"i'm a frog!")
	add_text(23,2,"market this\nway! ->")
	add_text(25,2,"buy seeds\nhere!")
	add_text(30,2,"sell crops\nhere!")
	dias={}
	init_plant()
end

function update_ui()
	ui_active=(active_text or planting or show_inv or buying or selling)
	
	show_inv=(btn(‚ùé) and btn(üÖæÔ∏è))
	
	if (planting) update_plant()
	if (buying) update_buy()
	if (selling) update_sell()
end

function draw_ui()
	draw_text()
	draw_inv()
	draw_plant()
	draw_buy()
	draw_sell()
end

function add_text(x,y,txt)
	texts[x+y*128]=txt
end

function get_text(x,y)
	if has_text(x,y) then
		return texts[x+y*128]
	else
		return nil
	end
end

function has_text(x,y)
	return texts[x+y*128]~=nil
end

function dia(txt)
	add(dias,txt)
end

function draw_text()
	local x=mx*8
	local y=my*8
	
	if (sleep) rectfill(x,y,x+64,y+64,0)
	
	if #dias>0 then
		active_text=dias[1]
	end
	
	if (active_text) then
		local tx=x+4
		local ty=y+48
		
		rectfill(tx,ty,tx+55,ty+14,7)
		print(active_text,tx+2,ty+2,1)
		print("üÖæÔ∏è",tx+48,ty+9,6)
	end
	
	if (btnp(üÖæÔ∏è)) then
		if (active_text) sfx(6)
		active_text=nil
		sleep=false
		if (#dias>0) del(dias,dias[1])
	end
end

function draw_inv()
	if (not show_inv) return
	
	local ix=mx*8+4
	local iy=my*8+4
	
	rectfill(ix,iy,ix+55,iy+55,0)
	
	spr(64,ix,iy)
	print(p.gold,ix+8,iy+1,7)
	print("day "..day,ix+28,iy+1,7)
	
	for i=1,4 do
		spr(crops[i].spr1,ix,iy+i*8)
		print(p.seeds[i],ix+8,iy+1+i*8,7)
		spr(crops[i].spr2,ix+28,iy+i*8)
		print(p.crops[i],ix+36,iy+1+i*8,7)
	end
	
	if p.axe then
		spr(35,ix,iy+48)
	elseif p.axeseed then
		spr(34,ix,iy+48)
	end
end

function init_plant()
	psel=1
	pcount=#p.seeds
end

function pick_seed(x,y)
	planting=true
	plantx=x
	planty=y
end

function update_plant()
 if btnp(‚ùé) then
 	planting=false
 	sfx(0)
 	return
 end
 
 --todo: stop movement input
 --from changing selection
 if btnp(‚¨ÖÔ∏è) then
 	psel-=1
 	sfx(6)
 end
 if btnp(‚û°Ô∏è) then
 	psel+=1
 	sfx(6)
 end
 if psel<1 then
 	psel=pcount
 elseif psel>pcount then
 	psel=1
 end
 
 local sc=p.seeds[psel]
 
 if btnp(üÖæÔ∏è) and sc>=1 then
 	plant(plantx,planty,psel)
 	p.seeds[psel]-=1
 	planting=false
 elseif btnp(üÖæÔ∏è) then
		sfx(0)
 end
end

function draw_plant()
	if (not planting) return
	
	local px=mx*8+4
	local py=my*8+20
	local cn=crops[psel].name
	local cs=crops[psel].spr2
	local sc=p.seeds[psel]
	
	rectfill(px,py,px+55,py+23,0)
	print("üÖæÔ∏èplant ‚ùénvm",px+2,py+17,7)
	print("‚¨ÖÔ∏è",px+15,py+9,7)
	print("‚û°Ô∏è",px+34,py+9,7)
	print(cn.." ("..sc..")",px+2,py+2,7)
	spr(cs,px+24,py+8)
end

function update_buy()
	if btnp(‚ùé) then
 	buying=false
 	return
 end
 
 if btnp(‚¨ÖÔ∏è) then
 	psel-=1
 	sfx(6)
 end
 if btnp(‚û°Ô∏è) then
 	psel+=1
 	sfx(6)
 end
 if psel<1 then
 	psel=pcount
 elseif psel>pcount then
 	psel=1
 end
 
 local sp=crops[psel].prs
 local gc=p.gold
 
 if btnp(üÖæÔ∏è) and gc>=sp then
 	p.gold-=sp
 	p.seeds[psel]+=1
 	sfx(4)
	elseif btnp(üÖæÔ∏è) then
		sfx(0)
 end
end

function draw_buy()
	if (not buying) return
	
	local px=mx*8+4
	local py=my*8+12
	local cn=crops[psel].name
	local cs=crops[psel].spr2
	local cp=crops[psel].prs
	local sc=p.seeds[psel]
	
	rectfill(px,py,px+55,py+39,0)
	print("üÖæÔ∏èbuy ‚ùéleave",px+2,py+33,7)
	print("‚¨ÖÔ∏è",px+15,py+9,7)
	print("‚û°Ô∏è",px+34,py+9,7)
	print(cn.." ("..sc..")",px+2,py+2,7)
	spr(cs,px+24,py+8)
	print("price:"..cp,px+12,py+17,7)
	spr(64,px+16,py+24)
	print(p.gold,px+24,py+25)
end

function update_sell()
	if btnp(‚ùé) then
 	selling=false
 	return
 end
 
 if btnp(‚¨ÖÔ∏è) then
 	psel-=1
 	sfx(6)
 end
 if btnp(‚û°Ô∏è) then
 	psel+=1
 	sfx(6)
 end
 if psel<1 then
 	psel=pcount
 elseif psel>pcount then
 	psel=1
 end
 
 local cc=p.crops[psel]
 local cp=crops[psel].prc
 local gc=p.gold
 
 if btnp(üÖæÔ∏è) and cc>=1 then
 	p.gold+=cp
 	p.crops[psel]-=1
 	sfx(4)
 elseif btnp(üÖæÔ∏è) then
		sfx(0)
 end
end

function draw_sell()
	if (not selling) return
	
	local px=mx*8+4
	local py=my*8+12
	local cn=crops[psel].name
	local cs=crops[psel].spr2
	local cp=crops[psel].prc
	local cc=p.crops[psel]
	
	rectfill(px,py,px+55,py+39,0)
	print("üÖæÔ∏èsell ‚ùéexit",px+2,py+33,7)
	print("‚¨ÖÔ∏è",px+15,py+9,7)
	print("‚û°Ô∏è",px+34,py+9,7)
	print(cn.." ("..cc..")",px+2,py+2,7)
	spr(cs,px+24,py+8)
	print("price:"..cp,px+12,py+17,7)
	spr(64,px+16,py+24)
	print(p.gold,px+24,py+25)
end

__gfx__
0000000033333333333333333333333333333333333333330000000000000000000000000000000000aaaa0000aaaa0033333333ffffffffff4fffff33333333
00000000333333333b3b3333333663333333373333bbbb3300000000000000000000000000000000099999900999999034444443ff5454ffff4fffff44433443
007007003333333333b333333366663333337a733bbbbbb30000000000000000000000000000000000f1f100001f1f00341ff153f454545fff4fffff44444444
00077000333333333333333336666663333337333bbbbbb30000000000000000000000000000000000ffff0000ffff0034ff1f53445454544444444445444444
00077000333333333333333336666663337333333bbbbbb3000000000000000000000000400000000ee1e1e00e1e1ee034555553f454515fffff4fff44444454
00700700333333333333b3b33566666337a7333333bbbb33000000000000000000000000477888840fe1e1f00f1e1ef033345333f454515fffff4fff44444444
000000003333333333333b3333555553337333333334433300000000000000000000000044444444001111000011110033345333f454545fffff4fff44454444
00000000333333333333333333333333333333333333333300000000000000000000000040000004005005000050050033333333445454544444444444444444
33333333333333334343333333333434333333333333333300000000333333333333333333333333000000003333333333333333333333333cc33cc344444444
3383333333333833774177111177147734444443335555330000000033355333333553333335533300000000334444444444444444444433c1cccc1c45444444
3917333333337193717777711777771734544443354444530000000044454444333544444444533300000000344444444444444444444443c1cccc1c44444454
3377333333337733577117711771177534444543354444530000000055554555333545555554533300000000344444444544444445444443cc8888cc44444444
33777773377777333311ee7777ee113334444443354444530000000033354333333543333334533300000000344444544444445444444443cc8888cc44454444
3377776336777733331733177133713334454443354444530000000044454444333544444444533300000000344444444444444444444443cccccccc44444444
33677633336776333377331771337733344444433355553300000000555545553335455555545333000000003445444444454444444544433cccccc334433444
333a3a3333a3a333337733777733773333333333333333330000000033333333333343333334333300000000344444444444444444444443ccc33ccc33333333
000000000000000000000000000d0000000000000000000000000000000b00003333433333343333000000003444444444444444444444433bb33bb333333333
000000000057750000000000000dd0000000000000b00000000000000b101000333553333335533300000000344444444444444444444443b1bbbb1b33555533
000000000577775000000700000df00000000900000b0b0000000800081b1000333543333334533300000000344444444544444445444443b1bbbb1b354b4453
00077000055775500070000000b0f0b000900000000bb0000080000000181b00333543333334533300000000344444544444445444444443bb8888bb3544b453
007777000555555000000000000bfb00000000000009900000000000001b1800333543333334533300000000344444444444444444444443bb8888bb35449453
0077770005555550000070000000000000009000000000000000800000000000333543333334533300000000344544444445444444454443bbbbbbbb35444453
00066000005555000000000000000000000000000000000000000000000000003335433333345333000000003444444444444444444444433bbbbbb333555533
0000000000000000000000000000000000000000000000000000000000000000333343333334333300000000344444444444444444444443bbb33bbb33333333
000000000000000034f33333000000000000000000000000000000000000b0a03333433333343333000000003444444444444444444444433bb33bb333333333
0000000000000000414f33330000000000000000000000b00000000000a0ba00333553333335533300000000344444444544444445444443b1bbbb1b33555533
0000000000000660444ff333000000000000020000b00b0000000a00000abb00333544444444533300000000344444544444445444444443b1bbbb1b35444b53
00000440000006603345554f0000000000200000000bb00000a00000000bb000333545555554533300000000344444444444444444444443bb8888bb3544b453
00044550066005503344554f000000000000000000022000000000000000b000333543333334533300000000344544444445444444454443bb8888bb35442453
04455000066000003344444f0000000000002000000000000000a00000000000333544444444533300000000344444444444444444444443bbbbbbbb35444453
0550000005500000334434430000000000000000000000000000000000000000333545555554533300000000334444444444444444444433344bb44333555533
00000000000000003355355300000000000000000000000000000000000000003333333333333333000000003333333333333333333333334443344433333333
00000000001110000000000000000000000000000000000000000000000000000000000000000000330000330000000000000000000000000000000000000000
007aaa00010001000000000000000000000000000000000000000000000000000000000000000000300000030000000000000000000000000000000000000000
07a44a90000001000c0ccc000000000000000000000000000000000000000000000000000000000033f0f1330000000000000000000000000000000000000000
0a4aaa900000100000ccc1c000000000000000000000000000000000000000000000000000000000330fff330000000000000000000000000000000000000000
0a4a4a900001000000ccccc0000000000000000000000000000000000000000000000000000000003aa1a1a30000000000000000000000000000000000000000
0aa44a90000000000c0ccc00000000000000000000000000000000000000000000000000000000003fa1a1f30000000000000000000000000000000000000000
00999900000100000000000000000000000000000000000000000000000000000000000000000000331111330000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000335334330000000000000000000000000000000000000000
33333333333333333333333366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33443344443333444433443366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cc44cccc4444cccc44cc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43365666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43366666656000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43366656666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4366666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4377777776000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4376666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43376666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
334cccccccccccccccccc43376666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cccccccccccccccccccc4376666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34cc44cccc4444cccc44cc4376666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33443344443333444433443376666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333365555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000900050000000000000101010001010101000300010101000000000100000000000000000001010000000001000000010000000000010100000000000000000000000000000000010000000000111111000000000000000000000000001111110000000000000000000000000011111101000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
181717171717171918170e0e0e17171928040101010101010418171717171901000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
281501110101042928010e0d0e01022928010102012e010401281e02041e2901000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
28150101011201292802010104010c29280c01010101010c010c010101010c02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815011b1c1c1c1d051b1c1c1c1c1d051b1c1c1c1c1c1c1c1c1c1c1c1c1c1d01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815023b3c3c3c3d053b3c3c3c3c3d053b3c3c3c3c3c3c3c3c3c3c3c3c3c3d01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815010101020129280101020101322928010101010201010102010101010104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
281501040101102928040115010104292801021b1d0101010101010101020101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
381719030318173938171717171717392801012b2d0401010101040101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
181739010138171901010101010401010101013b3d0101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2801020101010429010201010101010101020101010104010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2815010101011529010101010101010201015051515201010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
281501010102152901010401011b1c1c1d046061616202010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
281501040101152901010101013b3c3c3d016061616201010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2802010101040129020101030301040101017071717201010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
281515151515152901017363537301010401024a010401010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
381717171717173973737353637373730101011b1d0101020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
737373737373737373737363537373730101023b3d0101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7363635363535373735363635353637301737353637363020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7353535363635373736363536353537301046353015301010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7363536353636363535353536363537301636363530273010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7363635353535353635353635363637301735302015301010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7353635363635373735363635353537304730153636373010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7353536363535373736363535353637301636373016373010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7373737373737373737373737373737301020101010101040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000300000902000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200000914004640026300210000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
000100003563033630316302d6202b6202661024610206001e6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001d6401c640176400e6300b620086200561005610000000000000000000000065000000000000065000000000000065000000000000000000000000000000000000000000000000000000000000000000
000500002c05000000370503704037030370203701000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050000150101d0402c0202c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100003501035010350103501000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000a0100a0100c0200e02010030120301402015020170101701017000170001700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
